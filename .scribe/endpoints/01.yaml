name: Meters
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/v2/meters/{meter_number}/valve'
    metadata:
      groupName: Meters
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Meter Valve Status'
      description: "Toggle a meter's valve to either open or closed state."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      meter_number:
        name: meter_number
        description: 'The meter number.'
        required: true
        example: MTR123456789
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      meter_number: MTR123456789
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      valve_status:
        name: valve_status
        description: 'The desired valve status (1 for open, 0 for closed).'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      valve_status: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Valve status updated successfully",
            "data": {
              "meter_number": "MTR123456789",
              "valve_status": "CLOSED",
              "valve_last_switched_off_by": "user"
            },
            "errors": null
          }
        headers: []
        description: 'Valve status updated successfully'
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "No query results for model [Meter]",
            "data": null,
            "errors": {
              "type": "ModelNotFoundException",
              "details": null
            }
          }
        headers: []
        description: 'Meter not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Failed, please contact website admin for help",
            "data": null,
            "errors": {
              "type": "ValveOperationError",
              "details": null
            }
          }
        headers: []
        description: 'Valve operation failed'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cbPfe8g56E3Zkaa46Dv1dVh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/meters/readings
    metadata:
      groupName: Meters
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Meter Readings'
      description: 'Retrieve the latest meter readings for a given meter number.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      meter_number:
        name: meter_number
        description: 'The unique meter number.'
        required: true
        example: MTR123456789
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      meter_number: MTR123456789
    bodyParameters:
      meter_number:
        name: meter_number
        description: 'Must not be greater than 20 characters.'
        required: true
        example: eusgtmxkluwi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      meter_number: eusgtmxkluwi
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Current Meter Readings",
            "data": {
              "current_meter_readings": 345.67,
              "last_reading_date": "2025-08-09 12:34:56"
            },
            "errors": null
          }
        headers: []
        description: 'Meter readings retrieved successfully'
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "No query results for model [Meter]",
            "data": null,
            "errors": {
              "type": "ModelNotFoundException",
              "details": null
            }
          }
        headers: []
        description: 'Meter not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZhgdaE43ck861vPfbeV5aD6'
    controller: null
    method: null
    route: null
    custom: []
